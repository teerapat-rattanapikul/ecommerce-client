{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/teerapat/Documents/project/ecommerce/client/pages/shop/log/[shopid].js\";\nimport classes from \"./log.module.css\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Fragment } from \"react\";\n\nconst log = () => {\n  const {\n    0: userLog,\n    1: setUserLog\n  } = useState([]);\n  const {\n    0: userLogSelect,\n    1: setUserLogSelect\n  } = useState(true);\n  const {\n    0: orderDetailLog,\n    1: setOrderDetailLog\n  } = useState([]);\n  const {\n    0: orderLogSelect,\n    1: setOrderLogSelect\n  } = useState(true);\n  const {\n    0: orderLog,\n    1: setOrderLog\n  } = useState([]);\n  const router = useRouter();\n  const {\n    shopid\n  } = router.query;\n  useEffect(() => {\n    window.scrollTo(0, 250);\n\n    if (shopid) {\n      axios({\n        url: `http://localhost:8000/api/user/log`,\n        method: \"post\",\n        data: {\n          shopId: shopid\n        },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        setUserLog(res.data);\n      });\n      axios({\n        url: `http://localhost:8000/api/order/getAll`,\n        method: \"post\",\n        data: {\n          shopId: shopid\n        },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        setOrderLog(res.data);\n      });\n    }\n  }, []);\n\n  const dayMonthYear = dateTime => {\n    const NewDateTime = new Date(dateTime);\n    const hour = NewDateTime.getUTCHours();\n    const minute = NewDateTime.getUTCMinutes();\n    const month = NewDateTime.getUTCMonth() + 1; //months from 1-12\n\n    const day = NewDateTime.getUTCDate();\n    const year = NewDateTime.getUTCFullYear();\n    return hour + \" นาฬิกา \" + minute + \" นาที \" + \" วันที่ \" + day + \"/\" + month + \"/\" + year;\n  };\n\n  const orderLogDetail = orderId => {\n    console.log(orderId);\n    axios({\n      url: `http://localhost:8000/api/order/logDetail`,\n      method: \"post\",\n      data: {\n        orderId: orderId\n      },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      setOrderDetailLog(res.data);\n      setOrderLogSelect(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container container  shadow  bg-body rounded\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container__log,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.bar__log,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.button__log + \" \" + \"btn  \",\n          style: userLogSelect ? \"backgroundColor:#3c6084\" : null,\n          onClick: () => {\n            setUserLogSelect(true);\n          },\n          children: \"\\u0E1E\\u0E19\\u0E31\\u0E01\\u0E07\\u0E32\\u0E19\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.button__log + \" \" + \"btn\",\n          onClick: () => {\n            setUserLogSelect(false);\n            setOrderLogSelect(true);\n          },\n          children: \"\\u0E04\\u0E33\\u0E2A\\u0E31\\u0E48\\u0E07\\u0E0B\\u0E37\\u0E49\\u0E2D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: classes.contentBox__log + \" \" + \"table table-striped text-center \",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"\\u0E1E\\u0E19\\u0E31\\u0E01\\u0E07\\u0E32\\u0E19\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"\\u0E40\\u0E27\\u0E25\\u0E32\\u0E40\\u0E02\\u0E49\\u0E32\\u0E43\\u0E0A\\u0E49\\u0E07\\u0E32\\u0E19\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), userLogSelect ? /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"align-middle \",\n          children: userLog.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: dayMonthYear(user.updatedAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"align-middle \",\n          children: orderLogSelect ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: orderLog.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: classes.mainContent__log,\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                type: \"submit\",\n                value: order.product.name,\n                onClick: () => {\n                  orderLogDetail(order.id);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 23\n              }, this)\n            }, order.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n            children: orderDetailLog.map(orderLog => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: classes.mainContent__log,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: orderLog.order.product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [orderLog.oldStatus, \" \", \"-->\", \" \", orderLog.newStatus]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: dayMonthYear(orderLog.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 23\n              }, this)]\n            }, orderLog.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\nexport default log;","map":{"version":3,"sources":["/Users/teerapat/Documents/project/ecommerce/client/pages/shop/log/[shopid].js"],"names":["classes","useRouter","axios","useEffect","useState","Fragment","log","userLog","setUserLog","userLogSelect","setUserLogSelect","orderDetailLog","setOrderDetailLog","orderLogSelect","setOrderLogSelect","orderLog","setOrderLog","router","shopid","query","window","scrollTo","url","method","data","shopId","headers","then","res","dayMonthYear","dateTime","NewDateTime","Date","hour","getUTCHours","minute","getUTCMinutes","month","getUTCMonth","day","getUTCDate","year","getUTCFullYear","orderLogDetail","orderId","console","container__log","bar__log","button__log","contentBox__log","map","user","email","updatedAt","id","order","mainContent__log","product","name","oldStatus","newStatus","createdAt"],"mappings":"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","sourcesContent":["import classes from \"./log.module.css\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Fragment } from \"react\";\nconst log = () => {\n  const [userLog, setUserLog] = useState([]);\n  const [userLogSelect, setUserLogSelect] = useState(true);\n  const [orderDetailLog, setOrderDetailLog] = useState([]);\n  const [orderLogSelect, setOrderLogSelect] = useState(true);\n  const [orderLog, setOrderLog] = useState([]);\n  const router = useRouter();\n  const { shopid } = router.query;\n  useEffect(() => {\n    window.scrollTo(0, 250);\n    if (shopid) {\n      axios({\n        url: `http://localhost:8000/api/user/log`,\n        method: \"post\",\n        data: { shopId: shopid },\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }).then((res) => {\n        setUserLog(res.data);\n      });\n\n      axios({\n        url: `http://localhost:8000/api/order/getAll`,\n        method: \"post\",\n        data: { shopId: shopid },\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }).then((res) => {\n        setOrderLog(res.data);\n      });\n    }\n  }, []);\n\n  const dayMonthYear = (dateTime) => {\n    const NewDateTime = new Date(dateTime);\n    const hour = NewDateTime.getUTCHours();\n    const minute = NewDateTime.getUTCMinutes();\n    const month = NewDateTime.getUTCMonth() + 1; //months from 1-12\n    const day = NewDateTime.getUTCDate();\n    const year = NewDateTime.getUTCFullYear();\n    return (\n      hour +\n      \" นาฬิกา \" +\n      minute +\n      \" นาที \" +\n      \" วันที่ \" +\n      day +\n      \"/\" +\n      month +\n      \"/\" +\n      year\n    );\n  };\n\n  const orderLogDetail = (orderId) => {\n    console.log(orderId);\n    axios({\n      url: `http://localhost:8000/api/order/logDetail`,\n      method: \"post\",\n      data: { orderId: orderId },\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((res) => {\n      setOrderDetailLog(res.data);\n      setOrderLogSelect(false);\n    });\n  };\n\n  return (\n    <div className=\"container container  shadow  bg-body rounded\">\n      <div className={classes.container__log}>\n        <div className={classes.bar__log}>\n          <button\n            className={classes.button__log + \" \" + \"btn  \"}\n            style={userLogSelect ? \"backgroundColor:#3c6084\" : null}\n            onClick={() => {\n              setUserLogSelect(true);\n            }}\n          >\n            พนักงาน\n          </button>\n          <button\n            className={classes.button__log + \" \" + \"btn\"}\n            onClick={() => {\n              setUserLogSelect(false);\n              setOrderLogSelect(true);\n            }}\n          >\n            คำสั่งซื้อ\n          </button>\n        </div>\n        <table\n          className={\n            classes.contentBox__log + \" \" + \"table table-striped text-center \"\n          }\n        >\n          <thead>\n            <tr>\n              <th scope=\"col\">พนักงาน</th>\n              <th scope=\"col\">เวลาเข้าใช้งาน</th>\n            </tr>\n          </thead>\n          {userLogSelect ? (\n            <tbody className={\"align-middle \"}>\n              {userLog.map((user) => (\n                <tr key={user.id}>\n                  <td>{user.email}</td>\n                  <td>{dayMonthYear(user.updatedAt)}</td>\n                </tr>\n              ))}\n            </tbody>\n          ) : (\n            <tbody className={\"align-middle \"}>\n              {orderLogSelect ? (\n                <Fragment>\n                  {orderLog.map((order) => (\n                    <tr key={order.id} className={classes.mainContent__log}>\n                      <td\n                        type=\"submit\"\n                        value={order.product.name}\n                        onClick={() => {\n                          orderLogDetail(order.id);\n                        }}\n                      ></td>\n                    </tr>\n                  ))}\n                </Fragment>\n              ) : (\n                <Fragment>\n                  {orderDetailLog.map((orderLog) => (\n                    <tr key={orderLog.id} className={classes.mainContent__log}>\n                      <td>{orderLog.order.product.name}</td>\n                      <td>\n                        {orderLog.oldStatus} {\"-->\"} {orderLog.newStatus}\n                      </td>\n                      <td>{dayMonthYear(orderLog.createdAt)}</td>\n                    </tr>\n                  ))}\n                </Fragment>\n              )}\n            </tbody>\n          )}\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default log;\n"]},"metadata":{},"sourceType":"module"}