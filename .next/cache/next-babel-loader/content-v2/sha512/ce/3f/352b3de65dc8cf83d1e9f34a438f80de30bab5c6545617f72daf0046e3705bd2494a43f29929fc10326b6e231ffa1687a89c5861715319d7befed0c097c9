{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { CURRENTPRODUCT } from \"../actions/product\";\nconst initialState = {\n  product: {}\n};\n\nconst productReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CURRENTPRODUCT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        product: action.payload\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default productReducer;","map":{"version":3,"sources":["/Users/teerapat/Documents/project/ecommerce/client/redux/reducers/product.js"],"names":["CURRENTPRODUCT","initialState","product","productReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,cAAT,QAA+B,oBAA/B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AADU,CAArB;;AAIA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,cAAL;AACE,6CACKI,KADL;AAEEF,QAAAA,OAAO,EAAEG,MAAM,CAACE;AAFlB;;AAKF;AACE,+BACKH,KADL;AARJ;AAYD,CAbD;;AAeA,eAAeD,cAAf","sourcesContent":["import { CURRENTPRODUCT } from \"../actions/product\";\n\nconst initialState = {\n  product: {},\n};\n\nconst productReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CURRENTPRODUCT:\n      return {\n        ...state,\n        product: action.payload,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nexport default productReducer;\n"]},"metadata":{},"sourceType":"module"}