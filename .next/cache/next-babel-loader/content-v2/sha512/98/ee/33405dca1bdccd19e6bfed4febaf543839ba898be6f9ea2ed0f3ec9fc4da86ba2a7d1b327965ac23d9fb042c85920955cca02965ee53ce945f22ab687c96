{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/teerapat/Documents/project/ecommerce/client/pages/shop/log/[shopid].js\";\nimport classes from \"./log.module.css\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Fragment } from \"react\";\n\nconst log = () => {\n  const {\n    0: userLog,\n    1: setUserLog\n  } = useState([]);\n  const {\n    0: userLogSelect,\n    1: setUserLogSelect\n  } = useState(true);\n  const {\n    0: orderDetailLog,\n    1: setOrderDetailLog\n  } = useState([]);\n  const {\n    0: orderLogSelect,\n    1: setOrderLogSelect\n  } = useState(true);\n  const {\n    0: orderLog,\n    1: setOrderLog\n  } = useState([]);\n  const router = useRouter();\n  const {\n    shopid\n  } = router.query;\n  useEffect(() => {\n    if (shopid) {\n      axios({\n        url: `http://localhost:8000/api/user/log`,\n        method: \"post\",\n        data: {\n          shopId: shopid\n        },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        setUserLog(res.data);\n      });\n      axios({\n        url: `http://localhost:8000/api/order/getAll`,\n        method: \"post\",\n        data: {\n          shopId: shopid\n        },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        setOrderLog(res.data);\n      });\n    }\n  }, []);\n\n  const dayMonthYear = dateTime => {\n    const NewDateTime = new Date(dateTime);\n    const hour = NewDateTime.getUTCHours();\n    const minute = NewDateTime.getUTCMinutes();\n    const month = NewDateTime.getUTCMonth() + 1; //months from 1-12\n\n    const day = NewDateTime.getUTCDate();\n    const year = NewDateTime.getUTCFullYear();\n    return hour + \" นาฬิกา \" + minute + \" นาที \" + \" วันที่ \" + day + \"/\" + month + \"/\" + year;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container__log,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.bar__log,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: classes.button__log,\n          value: \"staff\",\n          onClick: () => {\n            setUserLogSelect(true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: classes.button__log,\n          value: \"order\",\n          onClick: () => {\n            setUserLogSelect(false);\n            setOrderLogSelect(true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), userLogSelect ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.contentBox__log,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.mainContent__log,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"staff email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"login at\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), userLog.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.mainContent__log,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: dayMonthYear(user.updatedAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: setOrderLogSelect ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.contentBox__log,\n          children: orderLog.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.mainContent__log,\n            onClick: () => {},\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: order.product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 21\n            }, this)\n          }, order.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.contentBox__log,\n          children: orderLog.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.mainContent__log,\n            onClick: () => {},\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: order.product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this)\n          }, order.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\nexport default log;","map":{"version":3,"sources":["/Users/teerapat/Documents/project/ecommerce/client/pages/shop/log/[shopid].js"],"names":["classes","useRouter","axios","useEffect","useState","Fragment","log","userLog","setUserLog","userLogSelect","setUserLogSelect","orderDetailLog","setOrderDetailLog","orderLogSelect","setOrderLogSelect","orderLog","setOrderLog","router","shopid","query","url","method","data","shopId","headers","then","res","dayMonthYear","dateTime","NewDateTime","Date","hour","getUTCHours","minute","getUTCMinutes","month","getUTCMonth","day","getUTCDate","year","getUTCFullYear","container__log","bar__log","button__log","contentBox__log","mainContent__log","map","user","email","updatedAt","id","order","product","name"],"mappings":"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","sourcesContent":["import classes from \"./log.module.css\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Fragment } from \"react\";\nconst log = () => {\n  const [userLog, setUserLog] = useState([]);\n  const [userLogSelect, setUserLogSelect] = useState(true);\n  const [orderDetailLog, setOrderDetailLog] = useState([]);\n  const [orderLogSelect, setOrderLogSelect] = useState(true);\n  const [orderLog, setOrderLog] = useState([]);\n  const router = useRouter();\n  const { shopid } = router.query;\n  useEffect(() => {\n    if (shopid) {\n      axios({\n        url: `http://localhost:8000/api/user/log`,\n        method: \"post\",\n        data: { shopId: shopid },\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }).then((res) => {\n        setUserLog(res.data);\n      });\n\n      axios({\n        url: `http://localhost:8000/api/order/getAll`,\n        method: \"post\",\n        data: { shopId: shopid },\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }).then((res) => {\n        setOrderLog(res.data);\n      });\n    }\n  }, []);\n\n  const dayMonthYear = (dateTime) => {\n    const NewDateTime = new Date(dateTime);\n    const hour = NewDateTime.getUTCHours();\n    const minute = NewDateTime.getUTCMinutes();\n    const month = NewDateTime.getUTCMonth() + 1; //months from 1-12\n    const day = NewDateTime.getUTCDate();\n    const year = NewDateTime.getUTCFullYear();\n    return (\n      hour +\n      \" นาฬิกา \" +\n      minute +\n      \" นาที \" +\n      \" วันที่ \" +\n      day +\n      \"/\" +\n      month +\n      \"/\" +\n      year\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <div className={classes.container__log}>\n        <div className={classes.bar__log}>\n          <input\n            type=\"submit\"\n            className={classes.button__log}\n            value=\"staff\"\n            onClick={() => {\n              setUserLogSelect(true);\n            }}\n          />\n          <input\n            type=\"submit\"\n            className={classes.button__log}\n            value=\"order\"\n            onClick={() => {\n              setUserLogSelect(false);\n              setOrderLogSelect(true);\n            }}\n          />\n        </div>\n        {userLogSelect ? (\n          <div className={classes.contentBox__log}>\n            <div className={classes.mainContent__log}>\n              <label>staff email</label>\n              <label>login at</label>\n            </div>\n            {userLog.map((user) => (\n              <div key={user.id} className={classes.mainContent__log}>\n                <label>{user.email}</label>\n                <label>{dayMonthYear(user.updatedAt)}</label>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <Fragment>\n            {setOrderLogSelect ? (\n              <div className={classes.contentBox__log}>\n                {orderLog.map((order) => (\n                  <div\n                    key={order.id}\n                    className={classes.mainContent__log}\n                    onClick={() => {}}\n                  >\n                    <label>{order.product.name}</label>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div className={classes.contentBox__log}>\n                {orderLog.map((order) => (\n                  <div\n                    key={order.id}\n                    className={classes.mainContent__log}\n                    onClick={() => {}}\n                  >\n                    <label>{order.product.name}</label>\n                  </div>\n                ))}\n              </div>\n            )}\n          </Fragment>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default log;\n"]},"metadata":{},"sourceType":"module"}