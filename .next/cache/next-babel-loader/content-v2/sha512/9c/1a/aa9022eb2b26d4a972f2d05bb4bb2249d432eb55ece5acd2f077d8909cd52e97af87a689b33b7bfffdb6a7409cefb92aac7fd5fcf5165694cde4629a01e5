{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { LOGIN } from \"../actions/user\";\nconst initialState = {\n  id: 0,\n  status: false\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        id: action.payload.id,\n        status: action.payload.status\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/Users/teerapat/Documents/project/ecommerce/client/redux/reducers/user.js"],"names":["LOGIN","initialState","id","status","userReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,KAAT,QAAsB,iBAAtB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,EAAE,EAAE,CADe;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,KAAL;AACE,6CACKK,KADL;AAEEH,QAAAA,EAAE,EAAEI,MAAM,CAACE,OAAP,CAAeN,EAFrB;AAGEC,QAAAA,MAAM,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAHzB;;AAMF;AACE,+BACKE,KADL;AATJ;AAaD,CAdD;;AAgBA,eAAeD,WAAf","sourcesContent":["import { LOGIN } from \"../actions/user\";\n\nconst initialState = {\n  id: 0,\n  status: false,\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return {\n        ...state,\n        id: action.payload.id,\n        status: action.payload.status,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}