{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/teerapat/Documents/project/ecommerce/client/pages/shop/order/[id].js\";\nimport axios from \"axios\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport classes from \"./order.module.css\";\nimport { useRouter } from \"next/router\";\nimport { connect } from \"react-redux\";\n\nconst Order = props => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    0: orderList,\n    1: setOrderList\n  } = useState([]);\n  const {\n    0: orderStatus,\n    1: setOrderStatus\n  } = useState(\"\");\n  const {\n    0: updateStatus,\n    1: setUpdateStatus\n  } = useState(false);\n  useEffect(() => {\n    if (id) {\n      axios({\n        url: `http://localhost:8000/api/order/getAll`,\n        method: \"post\",\n        data: {\n          shopId: id\n        },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        setOrderList(res.data);\n      });\n    }\n  }, []);\n\n  const changeStatus = orderId => {\n    axios({\n      url: `http://localhost:8000/api/order/updateStatus`,\n      method: \"post\",\n      data: {\n        orderId: orderId,\n        status: orderStatus\n      },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      console.log(res);\n      const orderIndex = orderList.findIndex(order => order.id === orderId);\n      orderList[orderIndex].status = orderStatus;\n      setOrderList([...orderList]);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container container  shadow  bg-body rounded\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container__order,\n      children: [/*#__PURE__*/_jsxDEV(Fragment, {\n        children: orderList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/empty-cart.png\",\n            height: 120,\n            width: 120\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), orderList.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: order.product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: order.product.detail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: order.totalPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: order.totleAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.detail__image,\n          src: `http://localhost:8000/${order.product.image}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: order.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), props.shop.detail[id].role === \"admin\" ? null : /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setUpdateStatus(!updateStatus);\n              setOrderStatus(order.status);\n            },\n            children: \"update status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), updateStatus ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => {\n                setOrderStatus(e.target.value);\n              },\n              value: orderStatus,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Paid\",\n                children: \"Paid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Shipping\",\n                children: \"Shipping\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Success\",\n                children: \"Success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Cancle\",\n                children: \"Cancle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                changeStatus(order.id);\n              },\n              children: \"save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 19\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)]\n      }, order.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\nconst MapStateToProps = state => ({\n  shop: state.shop\n});\n\nexport default connect(MapStateToProps)(Order);","map":{"version":3,"sources":["/Users/teerapat/Documents/project/ecommerce/client/pages/shop/order/[id].js"],"names":["axios","Fragment","useEffect","useState","classes","useRouter","connect","Order","props","router","id","query","orderList","setOrderList","orderStatus","setOrderStatus","updateStatus","setUpdateStatus","url","method","data","shopId","headers","then","res","changeStatus","orderId","status","console","log","orderIndex","findIndex","order","container__order","length","map","product","name","detail","totalPrice","totleAmount","detail__image","image","shop","role","e","target","value","MapStateToProps","state"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport classes from \"./order.module.css\";\nimport { useRouter } from \"next/router\";\nimport { connect } from \"react-redux\";\nconst Order = (props) => {\n  const router = useRouter();\n  const { id } = router.query;\n  const [orderList, setOrderList] = useState([]);\n  const [orderStatus, setOrderStatus] = useState(\"\");\n  const [updateStatus, setUpdateStatus] = useState(false);\n  useEffect(() => {\n    if (id) {\n      axios({\n        url: `http://localhost:8000/api/order/getAll`,\n        method: \"post\",\n        data: { shopId: id },\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }).then((res) => {\n        setOrderList(res.data);\n      });\n    }\n  }, []);\n  const changeStatus = (orderId) => {\n    axios({\n      url: `http://localhost:8000/api/order/updateStatus`,\n      method: \"post\",\n      data: { orderId: orderId, status: orderStatus },\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((res) => {\n      console.log(res);\n      const orderIndex = orderList.findIndex((order) => order.id === orderId);\n      orderList[orderIndex].status = orderStatus;\n      setOrderList([...orderList]);\n    });\n  };\n  return (\n    <div className=\"container container  shadow  bg-body rounded\">\n      <div className={classes.container__order}>\n        <Fragment>\n          {orderList.length === 0 ? (\n            <div>\n              <img src=\"/empty-cart.png\" height={120} width={120} />\n            </div>\n          ) : null}\n        </Fragment>\n        {orderList.map((order) => (\n          <div key={order.id}>\n            <div>{order.product.name}</div>\n            <div>{order.product.detail}</div>\n            <div>{order.totalPrice}</div>\n            <div>{order.totleAmount}</div>\n            <img\n              className={classes.detail__image}\n              src={`http://localhost:8000/${order.product.image}`}\n            />\n            <div>{order.status}</div>\n            {props.shop.detail[id].role === \"admin\" ? null : (\n              <Fragment>\n                <button\n                  onClick={() => {\n                    setUpdateStatus(!updateStatus);\n                    setOrderStatus(order.status);\n                  }}\n                >\n                  update status\n                </button>\n                {updateStatus ? (\n                  <Fragment>\n                    <select\n                      onChange={(e) => {\n                        setOrderStatus(e.target.value);\n                      }}\n                      value={orderStatus}\n                    >\n                      <option value=\"Paid\">Paid</option>\n                      <option value=\"Shipping\">Shipping</option>\n                      <option value=\"Success\">Success</option>\n                      <option value=\"Cancle\">Cancle</option>\n                    </select>\n                    <button\n                      onClick={() => {\n                        changeStatus(order.id);\n                      }}\n                    >\n                      save\n                    </button>\n                  </Fragment>\n                ) : null}\n              </Fragment>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst MapStateToProps = (state) => ({\n  shop: state.shop,\n});\n\nexport default connect(MapStateToProps)(Order);\n"]},"metadata":{},"sourceType":"module"}