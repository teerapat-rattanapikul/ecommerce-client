{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/teerapat/Documents/project/ecommerce/client/pages/login/index.js\";\nimport classes from \"./login.module.css\";\nimport axios from \"axios\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport Redirect from \"../../components/Redirect\";\nimport { connect } from \"react-redux\";\nimport { userLogin } from \"../../redux/actions/user\";\nimport { useRouter } from \"next/router\";\n\nconst Login = props => {\n  const {\n    0: login,\n    1: setLogin\n  } = useState(true);\n  const {\n    0: errLogin,\n    1: setErrLogin\n  } = useState(false);\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n\n  if (props.user.status) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n  const handlerSubmit = () => {\n    let authAction = \"login\";\n\n    if (!login) {\n      authAction = \"register\";\n    }\n\n    axios({\n      url: `http://localhost:8000/api/user/${authAction}`,\n      method: \"post\",\n      data: {\n        email: email,\n        password: password\n      },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.data.status === true) {\n        if (login) {\n          localStorage.setItem(\"token\", res.data.dataValues.id);\n          props.userLogin(res.data.dataValues.id, true);\n        } else {}\n      } else {\n        setErrLogin(true);\n      }\n    });\n    setEmail(\"\"), setPassword(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form__login,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.title__login,\n          children: login ? \"ACCOUNT LOGIN\" : \"ACCOUNT REGISTER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.text__login,\n          children: \"Email :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: classes.input__login,\n          placeholder: \"type your email\",\n          value: email,\n          onChange: e => {\n            setEmail(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.text__login,\n          children: \"Password :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: classes.input__login,\n          placeholder: \"type your password\",\n          value: password,\n          onChange: e => {\n            setPassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: classes.submit__login,\n          value: login ? \"login\" : \"register\",\n          onClick: handlerSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: [\"Not have account?\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            style: {\n              color: login ? \"red\" : \"green\",\n              cursor: \"pointer\"\n            },\n            onClick: () => {\n              setErrLogin(false);\n              setEmail(\"\");\n              setPassword(\"\");\n              setLogin(!login);\n            },\n            children: login ? \"create\" : \"login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), errLogin ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.error__login,\n          children: \"Your Email or Password Wrong!!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\nconst MapStateToProps = state => ({\n  user: state.user\n});\n\nconst MapDispatchToProps = {\n  userLogin: userLogin\n};\nexport default connect(MapStateToProps, MapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/teerapat/Documents/project/ecommerce/client/pages/login/index.js"],"names":["classes","axios","Fragment","useEffect","useState","Redirect","connect","userLogin","useRouter","Login","props","login","setLogin","errLogin","setErrLogin","email","setEmail","password","setPassword","user","status","handlerSubmit","authAction","url","method","data","headers","then","res","localStorage","setItem","dataValues","id","form__login","title__login","text__login","input__login","e","target","value","submit__login","textAlign","color","cursor","error__login","MapStateToProps","state","MapDispatchToProps"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAACS,QAAD;AAAA,OAAWC;AAAX,MAA0BV,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAA,OAACW,KAAD;AAAA,OAAQC;AAAR,MAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACa,QAAD;AAAA,OAAWC;AAAX,MAA0Bd,QAAQ,CAAC,EAAD,CAAxC;;AAEA,MAAIM,KAAK,CAACS,IAAN,CAAWC,MAAf,EAAuB;AACrB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,QAAMC,aAAa,GAAG,MAAM;AAC1B,QAAIC,UAAU,GAAG,OAAjB;;AACA,QAAI,CAACX,KAAL,EAAY;AACVW,MAAAA,UAAU,GAAG,UAAb;AACD;;AACDrB,IAAAA,KAAK,CAAC;AACJsB,MAAAA,GAAG,EAAG,kCAAiCD,UAAW,EAD9C;AAEJE,MAAAA,MAAM,EAAE,MAFJ;AAGJC,MAAAA,IAAI,EAAE;AAAEV,QAAAA,KAAK,EAAEA,KAAT;AAAgBE,QAAAA,QAAQ,EAAEA;AAA1B,OAHF;AAIJS,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAJL,KAAD,CAAL,CAOGC,IAPH,CAOSC,GAAD,IAAS;AACf,UAAIA,GAAG,CAACH,IAAJ,CAASL,MAAT,KAAoB,IAAxB,EAA8B;AAC5B,YAAIT,KAAJ,EAAW;AACTkB,UAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,GAAG,CAACH,IAAJ,CAASM,UAAT,CAAoBC,EAAlD;AACAtB,UAAAA,KAAK,CAACH,SAAN,CAAgBqB,GAAG,CAACH,IAAJ,CAASM,UAAT,CAAoBC,EAApC,EAAwC,IAAxC;AACD,SAHD,MAGO,CACN;AACF,OAND,MAMO;AACLlB,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,KAjBD;AAkBAE,IAAAA,QAAQ,CAAC,EAAD,CAAR,EAAcE,WAAW,CAAC,EAAD,CAAzB;AACD,GAxBD;;AAyBA,sBACE,QAAC,QAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAElB,OAAO,CAACiC,WAAxB;AAAA,gCACE;AAAO,UAAA,SAAS,EAAEjC,OAAO,CAACkC,YAA1B;AAAA,oBACGvB,KAAK,GAAG,eAAH,GAAqB;AAD7B;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAO,UAAA,SAAS,EAAEX,OAAO,CAACmC,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAEnC,OAAO,CAACoC,YAFrB;AAGE,UAAA,WAAW,EAAC,iBAHd;AAIE,UAAA,KAAK,EAAErB,KAJT;AAKE,UAAA,QAAQ,EAAGsB,CAAD,IAAO;AACfrB,YAAAA,QAAQ,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,gBALF,eAcE;AAAO,UAAA,SAAS,EAAEvC,OAAO,CAACmC,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,eAeE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAEnC,OAAO,CAACoC,YAFrB;AAGE,UAAA,WAAW,EAAC,oBAHd;AAIE,UAAA,KAAK,EAAEnB,QAJT;AAKE,UAAA,QAAQ,EAAGoB,CAAD,IAAO;AACfnB,YAAAA,WAAW,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,gBAfF,eAwBE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAEvC,OAAO,CAACwC,aAFrB;AAGE,UAAA,KAAK,EAAE7B,KAAK,GAAG,OAAH,GAAa,UAH3B;AAIE,UAAA,OAAO,EAAEU;AAJX;AAAA;AAAA;AAAA;AAAA,gBAxBF,eA8BE;AAAO,UAAA,KAAK,EAAE;AAAEoB,YAAAA,SAAS,EAAE;AAAb,WAAd;AAAA,0CACoB,GADpB,eAEE;AACE,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE/B,KAAK,GAAG,KAAH,GAAW,OAAzB;AAAkCgC,cAAAA,MAAM,EAAE;AAA1C,aADT;AAEE,YAAA,OAAO,EAAE,MAAM;AACb7B,cAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,cAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,cAAAA,WAAW,CAAC,EAAD,CAAX;AACAN,cAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACD,aAPH;AAAA,sBASGA,KAAK,GAAG,QAAH,GAAc;AATtB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BF,EA4CGE,QAAQ,gBACP;AAAK,UAAA,SAAS,EAAEb,OAAO,CAAC4C,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADO,gBAKP,qCAjDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0DD,CA7FD;;AA+FA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClC3B,EAAAA,IAAI,EAAE2B,KAAK,CAAC3B;AADsB,CAAZ,CAAxB;;AAIA,MAAM4B,kBAAkB,GAAG;AACzBxC,EAAAA,SAAS,EAAEA;AADc,CAA3B;AAIA,eAAeD,OAAO,CAACuC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CtC,KAA7C,CAAf","sourcesContent":["import classes from \"./login.module.css\";\nimport axios from \"axios\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport Redirect from \"../../components/Redirect\";\nimport { connect } from \"react-redux\";\nimport { userLogin } from \"../../redux/actions/user\";\nimport { useRouter } from \"next/router\";\nconst Login = (props) => {\n  const [login, setLogin] = useState(true);\n  const [errLogin, setErrLogin] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  if (props.user.status) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const handlerSubmit = () => {\n    let authAction = \"login\";\n    if (!login) {\n      authAction = \"register\";\n    }\n    axios({\n      url: `http://localhost:8000/api/user/${authAction}`,\n      method: \"post\",\n      data: { email: email, password: password },\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((res) => {\n      if (res.data.status === true) {\n        if (login) {\n          localStorage.setItem(\"token\", res.data.dataValues.id);\n          props.userLogin(res.data.dataValues.id, true);\n        } else {\n        }\n      } else {\n        setErrLogin(true);\n      }\n    });\n    setEmail(\"\"), setPassword(\"\");\n  };\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <div className={classes.form__login}>\n          <label className={classes.title__login}>\n            {login ? \"ACCOUNT LOGIN\" : \"ACCOUNT REGISTER\"}\n          </label>\n          <label className={classes.text__login}>Email :</label>\n          <input\n            type=\"text\"\n            className={classes.input__login}\n            placeholder=\"type your email\"\n            value={email}\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n          <label className={classes.text__login}>Password :</label>\n          <input\n            type=\"text\"\n            className={classes.input__login}\n            placeholder=\"type your password\"\n            value={password}\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n          <input\n            type=\"submit\"\n            className={classes.submit__login}\n            value={login ? \"login\" : \"register\"}\n            onClick={handlerSubmit}\n          />\n          <label style={{ textAlign: \"center\" }}>\n            Not have account?{\" \"}\n            <a\n              style={{ color: login ? \"red\" : \"green\", cursor: \"pointer\" }}\n              onClick={() => {\n                setErrLogin(false);\n                setEmail(\"\");\n                setPassword(\"\");\n                setLogin(!login);\n              }}\n            >\n              {login ? \"create\" : \"login\"}\n            </a>\n          </label>\n          {errLogin ? (\n            <div className={classes.error__login}>\n              Your Email or Password Wrong!!!\n            </div>\n          ) : (\n            <></>\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst MapStateToProps = (state) => ({\n  user: state.user,\n});\n\nconst MapDispatchToProps = {\n  userLogin: userLogin,\n};\n\nexport default connect(MapStateToProps, MapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}